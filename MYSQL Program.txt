MAINCONTROLLER:-

package com.example.demo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
@Controller
@RequestMapping(path="/save")
public class MainController {
	@Autowired
    private UserRepository useRepository;
	
	@PostMapping(path="/add")
	public @ResponseBody String addNewUser(@RequestParam String name,@RequestParam String email)
	{
		User n=new User();
		n.setName(name);
		n.setEmail(email);
		userRepository.saved(n);
		return "saved";
		
	}
	@GetMapping(path="/all")
	public @ResponseBody Iterable<User>getAllUsers(){
		return userRepository.findAll();
	}
}




MYSQLAPPLICATION:-

package com.example.demo;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
@SpringBootApplication
public class MysqlApplication {
public static void main (String []args) {
	SpringApplication.run(MysqlApplication.class, args);
}
}


USER:-

package com.example.demo;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
@Entity
public class User {
@Id
@GeneratedValue(strategy=GenerationType.AUTO)
private Integer id;
private String name;
private String email;
public Integer getId() {
	return id;
}
public void setId(Integer id) {
	this.id = id;
}
public String getName() {
	return name;
}
public void setName(String name) {
	this.name = name;
}
public String getEmail() {
	return email;
}
public void setEmail(String email) {
	this.email = email;
}
}


USERREPOSITORY:-


package com.example.demo;
import org.springframework.data.repository.CrudRepository;
public interface UserRepository extends CrudRepository <User,Integer>{
	
}


APPLICATIONPROPERTIES:-

spring.application.name=SQL
server.port=9092
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3305/vaish
spring.datasource.username=root
spring.datasource.password=vaish
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.show-sql:true

